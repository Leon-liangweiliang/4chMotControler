C51 COMPILER V9.59.0.0   EEPROM                                                            04/01/2024 20:57:27 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN .\Objects\eeprom.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE eeprom.c LARGE OMF2 OPTIMIZE(0,SIZE) BROWSE ORDER INCDIR(..\Src;.\LCD) D
                    -EBUG PRINT(.\Listings\eeprom.lst) TABS(2) OBJECT(.\Objects\eeprom.obj)

line level    source

   1          #include "main.h"
   2          #include "intrins.h"
   3          
   4          void IapIdle()
   5          {
   6   1          IAP_CONTR = 0;                              //关闭IAP功能
   7   1          IAP_CMD = 0;                                //清除命令寄存器
   8   1          IAP_TRIG = 0;                               //清除触发寄存器
   9   1          IAP_ADDRH = 0x80;                           //将地址设置到非IAP区域
  10   1          IAP_ADDRL = 0;
  11   1      }
  12          
  13          u8 IapRead(int addr)
  14          {
  15   1          u8 dat;
  16   1      
  17   1          IAP_CONTR = 0x80;                         //使能IAP
  18   1          IAP_TPS   = 33;
  19   1          IAP_CMD = 1;                                //设置IAP读命令
  20   1          IAP_ADDRL = addr;                           //设置IAP低地址
  21   1          IAP_ADDRH = addr >> 8;                      //设置IAP高地址
  22   1          IAP_TRIG = 0x5a;                            //写触发命令(0x5a)
  23   1          IAP_TRIG = 0xa5;                            //写触发命令(0xa5)
  24   1          _nop_();
  25   1          dat = IAP_DATA;                             //读IAP数据
  26   1          IapIdle();                                  //关闭IAP功能
  27   1      
  28   1          return dat;
  29   1      }
  30          
  31          void IapProgram(int addr, u8 dat)
  32          {
  33   1          IAP_CONTR = 0X80;                         //使能IAP
  34   1          IAP_TPS   = 33;
  35   1          IAP_CMD = 2;                                //设置IAP写命令
  36   1          IAP_ADDRL = addr;                           //设置IAP低地址
  37   1          IAP_ADDRH = addr >> 8;                      //设置IAP高地址
  38   1          IAP_DATA = dat;                             //写IAP数据
  39   1          IAP_TRIG = 0x5a;                            //写触发命令(0x5a)
  40   1          IAP_TRIG = 0xa5;                            //写触发命令(0xa5)
  41   1          _nop_();
  42   1          IapIdle();                                  //关闭IAP功能
  43   1      }
  44          
  45          void IapErase(int addr)
  46          {
  47   1          IAP_CONTR = 0X80;                         //使能IAP
  48   1          IAP_TPS   = 33;
  49   1          IAP_CMD = 3;                                //设置IAP擦除命令
  50   1          IAP_ADDRL = addr;                           //设置IAP低地址
  51   1          IAP_ADDRH = addr >> 8;                      //设置IAP高地址
  52   1          IAP_TRIG = 0x5a;                            //写触发命令(0x5a)
  53   1          IAP_TRIG = 0xa5;                            //写触发命令(0xa5)
  54   1          _nop_();                                    //
C51 COMPILER V9.59.0.0   EEPROM                                                            04/01/2024 20:57:27 PAGE 2   

  55   1          IapIdle();                                  //关闭IAP功能
  56   1      }
  57          
  58          void IapProgramArea(int addr, u8*datap, int len)
  59          {
  60   1        while (len>0)
  61   1          {
  62   2          IapProgram(addr,*datap);
  63   2          datap++;
  64   2          addr++;
  65   2          len--;
  66   2          }
  67   1      }
  68          
  69          
  70          void IapReadArea(int addr, u8*datap, int len)
  71          {
  72   1        while (len>0)
  73   1          {
  74   2          *datap=IapRead(addr);
  75   2          datap++;
  76   2          addr++;
  77   2          len--;
  78   2          }
  79   1      }
  80          
  81          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    377    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     22    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
