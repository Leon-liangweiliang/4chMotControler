C51 COMPILER V9.59.0.0   LCD                                                               03/30/2024 01:43:47 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\Objects\LCD.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE LCD\LCD.c LARGE OMF2 OPTIMIZE(0,SIZE) BROWSE ORDER INCDIR(..\Src;.\LCD) 
                    -DEBUG PRINT(.\Listings\LCD.lst) TABS(2) OBJECT(.\Objects\LCD.obj)

line level    source

   1          //////////////////////////////////////////////////////////////////////////////////   
   2          //本程序只供学习使用，未经作者许可，不得用于其它任何用途
   3          //测试硬件：STC51
   4          //1.8寸TFT_ST7735液晶驱动
   5          //********************************************************************************
   6          //V1.1修改说明
   7          //加入横屏显示代码，直接在初始化中切换横竖屏模式
   8          //////////////////////////////////////////////////////////////////////////////////
   9          #include "main.h"
  10          #include "intrins.h"
  11          #include "lcd.h"
  12          #include "spi_flash.h"
  13          #include "saveconfigfile.h"
  14          #include <string.h>
  15          
  16          #define USE_LANDSCAPE//测试程序横竖屏切换，横屏请开启此宏，竖屏请屏蔽
  17          #define nopsw _nop_(); //_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();_nop_();
  18          
  19          //---------------------------液晶屏接线说明-------------------------------------//
  20          //接线前请参考液晶屏说明书第10页引脚定义
  21          sbit bl        =P3^4;//接模块BL引脚，背光可以采用IO控制或者PWM控制，也可以直接接到高电平常亮
  22          sbit scl       =P1^2;//接模块CLK引脚,接裸屏Pin9_SCL
  23          sbit sda       =P1^3;//接模块DIN/MOSI引脚，接裸屏Pin8_SDA
  24          sbit rs        =P1^5;//接模块D/C引脚，接裸屏Pin7_A0
  25          sbit cs        =P3^5;//接模块CE引脚，接裸屏Pin12_CS
  26          sbit reset     =P1^4;//接模块RST引脚，接裸屏Pin6_RES
  27          //---------------------------End of液晶屏接线---------------------------------//
  28          
  29          
  30          
  31          //向SPI总线传输一个8位数据
  32          void  SPI_WriteData(uchar Data2)
  33          {
  34   1        unsigned char i=0;
  35   1        for(i=8;i>0;i--)
  36   1        {
  37   2          if(Data2&0x80)  
  38   2          sda=1; //输出数据
  39   2          else sda=0;
  40   2          nopsw;
  41   2          scl=0;
  42   2          nopsw;
  43   2          scl=1;
  44   2          Data2<<=1;
  45   2        }
  46   1      }
  47          //向液晶屏写一个8位指令
  48          void  Lcd_WriteIndex(uchar Data2)
  49          {
  50   1          
  51   1          cs=0;
  52   1          rs=0;
  53   1          SPI_WriteData(Data2);     
  54   1          cs=1;
C51 COMPILER V9.59.0.0   LCD                                                               03/30/2024 01:43:47 PAGE 2   

  55   1      }
  56          //向液晶屏写一个8位数据
  57          void  Lcd_WriteData(uchar Data2)
  58          { 
  59   1          unsigned char i=0;
  60   1          cs=0;
  61   1          rs=1;
  62   1          SPI_WriteData(Data2);   
  63   1          cs=1;
  64   1      }
  65          //向液晶屏写一个16位数据
  66          void  LCD_WriteData_16Bit(unsigned int Data2)
  67          {
  68   1        unsigned char i=0;
  69   1        cs=0;
  70   1        rs=1;
  71   1        SPI_WriteData(Data2>>8);  //写入高8位数据
  72   1        SPI_WriteData(Data2);       //写入低8位数据
  73   1        cs=1;
  74   1      
  75   1      }
  76          
  77          void LCD_Reset()
  78          {
  79   1          reset=0;
  80   1          delay_ms(100);
  81   1          reset=1;
  82   1          delay_ms(100);
  83   1      }
  84          
  85          
  86          void CtrlLcdBL(u8 cl)
  87          {
  88   1        if (cl==1) bl=1;
  89   1        else bl=0;
  90   1      }
  91          
  92          
  93          //////////////////////////////////////////////////////////////////////////////////////////////
  94          //液晶屏初始化 for S6D02A1
  95          void lcd_initial()
  96          { 
  97   1        LCD_Reset();//Reset before LCD Init.  
  98   1        //LCD Init For 1.44Inch LCD Panel with ST7735R.
  99   1        Lcd_WriteIndex(0x11);//Sleep exit 
 100   1        delay_ms (120);
 101   1          
 102   1        //ST7735R Frame Rate
 103   1        Lcd_WriteIndex(0xB1); 
 104   1        Lcd_WriteData(0x01); 
 105   1        Lcd_WriteData(0x2C); 
 106   1        Lcd_WriteData(0x2D); 
 107   1      
 108   1        Lcd_WriteIndex(0xB2); 
 109   1        Lcd_WriteData(0x01); 
 110   1        Lcd_WriteData(0x2C); 
 111   1        Lcd_WriteData(0x2D); 
 112   1      
 113   1        Lcd_WriteIndex(0xB3); 
 114   1        Lcd_WriteData(0x01); 
 115   1        Lcd_WriteData(0x2C); 
 116   1        Lcd_WriteData(0x2D); 
C51 COMPILER V9.59.0.0   LCD                                                               03/30/2024 01:43:47 PAGE 3   

 117   1        Lcd_WriteData(0x01); 
 118   1        Lcd_WriteData(0x2C); 
 119   1        Lcd_WriteData(0x2D); 
 120   1        
 121   1        Lcd_WriteIndex(0xB4); //Column inversion 
 122   1        Lcd_WriteData(0x07); 
 123   1        
 124   1        //ST7735R Power Sequence
 125   1        Lcd_WriteIndex(0xC0); 
 126   1        Lcd_WriteData(0xA2); 
 127   1        Lcd_WriteData(0x02); 
 128   1        Lcd_WriteData(0x84); 
 129   1        Lcd_WriteIndex(0xC1); 
 130   1        Lcd_WriteData(0xC5); 
 131   1      
 132   1        Lcd_WriteIndex(0xC2); 
 133   1        Lcd_WriteData(0x0A); 
 134   1        Lcd_WriteData(0x00); 
 135   1      
 136   1        Lcd_WriteIndex(0xC3); 
 137   1        Lcd_WriteData(0x8A); 
 138   1        Lcd_WriteData(0x2A); 
 139   1        Lcd_WriteIndex(0xC4); 
 140   1        Lcd_WriteData(0x8A); 
 141   1        Lcd_WriteData(0xEE); 
 142   1        
 143   1        Lcd_WriteIndex(0xC5); //VCOM 
 144   1        Lcd_WriteData(0x0E); 
 145   1        
 146   1        Lcd_WriteIndex(0x36); //MX, MY, RGB mode 
 147   1      //  Lcd_WriteData(0xC0); 
 148   1      #ifdef USE_LANDSCAPE
 149   1        Lcd_WriteData(0x68); //竖屏C8 横屏08 A8
 150   1      #else
                Lcd_WriteData(0xC8); //竖屏C8 横屏08 A8
              #endif    */
 153   1        //ST7735R Gamma Sequence
 154   1        Lcd_WriteIndex(0xe0); 
 155   1        Lcd_WriteData(0x0f); 
 156   1        Lcd_WriteData(0x1a); 
 157   1        Lcd_WriteData(0x0f); 
 158   1        Lcd_WriteData(0x18); 
 159   1        Lcd_WriteData(0x2f); 
 160   1        Lcd_WriteData(0x28); 
 161   1        Lcd_WriteData(0x20); 
 162   1        Lcd_WriteData(0x22); 
 163   1        Lcd_WriteData(0x1f); 
 164   1        Lcd_WriteData(0x1b); 
 165   1        Lcd_WriteData(0x23); 
 166   1        Lcd_WriteData(0x37); 
 167   1        Lcd_WriteData(0x00);  
 168   1        Lcd_WriteData(0x07); 
 169   1        Lcd_WriteData(0x02); 
 170   1        Lcd_WriteData(0x10); 
 171   1      
 172   1        Lcd_WriteIndex(0xe1); 
 173   1        Lcd_WriteData(0x0f); 
 174   1        Lcd_WriteData(0x1b); 
 175   1        Lcd_WriteData(0x0f); 
 176   1        Lcd_WriteData(0x17); 
 177   1        Lcd_WriteData(0x33); 
 178   1        Lcd_WriteData(0x2c); 
C51 COMPILER V9.59.0.0   LCD                                                               03/30/2024 01:43:47 PAGE 4   

 179   1        Lcd_WriteData(0x29); 
 180   1        Lcd_WriteData(0x2e); 
 181   1        Lcd_WriteData(0x30); 
 182   1        Lcd_WriteData(0x30); 
 183   1        Lcd_WriteData(0x39); 
 184   1        Lcd_WriteData(0x3f); 
 185   1        Lcd_WriteData(0x00); 
 186   1        Lcd_WriteData(0x07); 
 187   1        Lcd_WriteData(0x03); 
 188   1        Lcd_WriteData(0x10);  
 189   1        
 190   1        Lcd_WriteIndex(0x2a);
 191   1        Lcd_WriteData(0x00);
 192   1        Lcd_WriteData(0x02);
 193   1        Lcd_WriteData(0x02);
 194   1        Lcd_WriteData(0x80+2);
 195   1      
 196   1        Lcd_WriteIndex(0x2b);
 197   1        Lcd_WriteData(0x00);
 198   1        Lcd_WriteData(0x00+3);
 199   1        Lcd_WriteData(0x00);
 200   1        Lcd_WriteData(0xA0+3);
 201   1        
 202   1        Lcd_WriteIndex(0xF0); //Enable test command  
 203   1        Lcd_WriteData(0x01); 
 204   1        Lcd_WriteIndex(0xF6); //Disable ram power save mode 
 205   1        Lcd_WriteData(0x00); 
 206   1        
 207   1        Lcd_WriteIndex(0x3A); //65k mode 
 208   1        Lcd_WriteData(0x05); 
 209   1        
 210   1        Lcd_WriteIndex(0x29);//Display on
 211   1      
 212   1        CtrlLcdBL(0);
 213   1      }
 214          
 215          
 216          
 217          /*************************************************
 218          函数名：LCD_Set_Region
 219          功能：设置lcd显示区域，在此区域写点数据自动换行
 220          入口参数：xy起点和终点
 221          返回值：无
 222          *************************************************/
 223          void Lcd_SetRegion(unsigned int x_start,unsigned int y_start,unsigned int x_end,unsigned int y_end)
 224          { 
 225   1      
 226   1      //#ifdef USE_LANDSCAPE//使用横屏模式
 227   1        Lcd_WriteIndex(0x2a);
 228   1        Lcd_WriteData(0x0);
 229   1        Lcd_WriteData(x_start);
 230   1        Lcd_WriteData(0x00);
 231   1        Lcd_WriteData(x_end);
 232   1      
 233   1        Lcd_WriteIndex(0x2b);
 234   1        Lcd_WriteData(0x0);
 235   1        Lcd_WriteData(y_start);
 236   1        Lcd_WriteData(0x0);
 237   1        Lcd_WriteData(y_end);
 238   1      /*
 239   1      #else//竖屏模式 
 240   1        Lcd_WriteIndex(0x2a);
C51 COMPILER V9.59.0.0   LCD                                                               03/30/2024 01:43:47 PAGE 5   

 241   1        Lcd_WriteData(0x02);
 242   1        Lcd_WriteData(x_start+2);
 243   1        Lcd_WriteData(0x02);
 244   1        Lcd_WriteData(x_end+2);
 245   1      
 246   1        Lcd_WriteIndex(0x2b);
 247   1        Lcd_WriteData(0x01);
 248   1        Lcd_WriteData(y_start+1);
 249   1        Lcd_WriteData(0x01);
 250   1        Lcd_WriteData(y_end+1); 
 251   1      #endif
 252   1      */
 253   1        Lcd_WriteIndex(0x2c);
 254   1      }
 255          
 256          
 257          void LCD_Clear(u16 color)
 258          {
 259   1        u8 i,j;
 260   1        Lcd_SetRegion(0,0,130,132);
 261   1        for (i=0;i<130;i++)
 262   1            for (j=0;j<132;j++)
 263   1                LCD_WriteData_16Bit(color);
 264   1      }
 265          
 266          void PutPixel(u8 x_start,u8 y_start,u16 color)
 267          {
 268   1        Lcd_SetRegion(x_start,y_start,x_start+1,y_start+1);
 269   1        LCD_WriteData_16Bit(color);
 270   1        
 271   1      }
 272          
 273          
 274          /*****************************************************************************
 275           * @name       :void Gui_Drawbmp16(u16 x,u16 y,const unsigned char *p)
 276           * @date       :2018-08-09 
 277           * @function   :Display a 16-bit BMP image
 278           * @parameters :x:the bebinning x coordinate of the BMP image
 279                          y:the bebinning y coordinate of the BMP image
 280                          p:the start address of image array
 281           * @retvalue   :None
 282          ******************************************************************************/ 
 283          void Gui_Drawbmp16(u8 x,u8 y,const unsigned char *p) //显示图片
 284          {
 285   1        u16 Ki; 
 286   1        unsigned char picW,picH; 
 287   1        u16 sendv;
 288   1        PICHEADBYTE* picHead=  (PICHEADBYTE*) p;
 289   1        p+=sizeof(PICHEADBYTE);
 290   1        picW=picHead->wl;
 291   1        picH=picHead->hl;
 292   1        Lcd_SetRegion(x,y,x+picW-1,y+picH-1);//窗口设置
 293   1        Ki=picW*picH;
 294   1        while (Ki>0)
 295   1        { 
 296   2          sendv=*(p+1); 
 297   2          sendv=sendv<<8;
 298   2          sendv|=*(p);  //数据低位在前
 299   2          LCD_WriteData_16Bit(sendv);     
 300   2          p+=2;
 301   2          Ki--;
 302   2        } 
C51 COMPILER V9.59.0.0   LCD                                                               03/30/2024 01:43:47 PAGE 6   

 303   1      //  Lcd_SetRegion(0,0,LCD_W-1,LCD_H-1);//恢复显示窗口为全屏 
 304   1      }
 305          
 306          
 307          
 308          /*****************************************************************************
 309           * @name       :void Gui_Drawbmp16(u16 x,u16 y,const unsigned char *p)
 310           * @date       :2018-08-09 
 311           * @function   :Display a 16-bit BMP image
 312           * @parameters :x:the bebinning x coordinate of the BMP image
 313                          y:the bebinning y coordinate of the BMP image
 314                          p:the start address of image array
 315           * @retvalue   :None
 316          ******************************************************************************/ 
 317          void Gui_DrawFlashbmp16(u8 x,u8 y,u32 FlashAddr) //显示Flash图片
 318          {
 319   1        u8 flashdata[256];
 320   1        unsigned char *p;
 321   1        u16 picSize;
 322   1        u16 sendvty;
 323   1        u16 sendN;
 324   1        PICHEADBYTE picHead;
 325   1        SPI_FLASH_BufferRead(&(picHead.scan),FlashAddr,sizeof(PICHEADBYTE));
 326   1      
 327   1        if (picHead.wl>128 || picHead.hl>128) return;
 328   1        
 329   1        FlashAddr+=sizeof(PICHEADBYTE);
 330   1        picSize=picHead.wl*picHead.hl*2;
 331   1        
 332   1        Lcd_SetRegion(x,y,x+picHead.wl-1,y+picHead.hl-1);//窗口设置
 333   1        
 334   1        while(picSize>0)
 335   1        {
 336   2          if (picSize>256)
 337   2            {
 338   3            sendN=256- (FlashAddr&0xff);
 339   3            SPI_FLASH_BufferRead(flashdata,FlashAddr,sendN);
 340   3            FlashAddr+=sendN;
 341   3            picSize-=sendN;
 342   3            }
 343   2          else 
 344   2            {
 345   3            sendN=picSize;  
 346   3            SPI_FLASH_BufferRead(flashdata,FlashAddr,picSize);
 347   3            picSize=0;
 348   3            }
 349   2      
 350   2          p=flashdata;
 351   2          while (sendN>0)
 352   2          { 
 353   3            sendvty=*(p+1); 
 354   3            sendvty=sendvty<<8;
 355   3            sendvty|=(*(p));  //数据低位在前
 356   3            LCD_WriteData_16Bit(sendvty);     
 357   3            p+=2;
 358   3            sendN-=2;
 359   3          } 
 360   2        }
 361   1      }
 362          
 363          
 364          //显示一个英文字符
C51 COMPILER V9.59.0.0   LCD                                                               03/30/2024 01:43:47 PAGE 7   

 365          void Display_ASCII8X16(u8 x0,u8 y0,uchar *s,u8 strglen,u16 color)
 366          {
 367   1        u8 i,j,k,x,y,xx;
 368   1        
 369   1        unsigned char qm;
 370   1        
 371   1        u16 ulOffset;
 372   1        
 373   1        char  ywbuf[32];
 374   1      
 375   1        for(i = 0; i<strglen;i++)
 376   1        {
 377   2          if(((unsigned char)(*(s+i))) >= 161)
 378   2          {
 379   3            return;
 380   3          }
 381   2          
 382   2          else
 383   2          {
 384   3            qm = *(s+i);
 385   3      
 386   3            ulOffset = (u16)(qm) <<4;
 387   3            
 388   3            for (j = 0; j < 16; j ++)
 389   3            {
 390   4              ywbuf[j]=Zk_ASCII8X16[ulOffset+j];
 391   4            }
 392   3                   
 393   3            for(y = 0;y < 16;y++)
 394   3            {
 395   4                for(x=0;x<8;x++) 
 396   4                {
 397   5                   k=x &0x07;
 398   5                        
 399   5                  if(ywbuf[y]&(0x80 >> k))
 400   5                  {
 401   6                    xx=x0+x+(i<<3);
 402   6                    PutPixel(xx,y+y0,color);
 403   6                  }
 404   5                    
 405   5                }
 406   4            }
 407   3      
 408   3          }
 409   2        }       
 410   1      }
 411          
 412          
 413          
 414          /*******************************************************************
 415           * @name       :void LCD_Fill(u16 sx,u16 sy,u16 ex,u16 ey,u16 color)
 416           * @date       :2018-08-09 
 417           * @function   :fill the specified area
 418           * @parameters :sx:the bebinning x coordinate of the specified area
 419                          sy:the bebinning y coordinate of the specified area
 420                          ex:the ending x coordinate of the specified area
 421                          ey:the ending y coordinate of the specified area
 422                          color:the filled color value
 423           * @retvalue   :None
 424          ********************************************************************/
 425          void LCD_Fill(u16 sx,u16 sy,u16 ex,u16 ey,u16 color)
 426          {   
C51 COMPILER V9.59.0.0   LCD                                                               03/30/2024 01:43:47 PAGE 8   

 427   1        u16 i,j;      
 428   1        u16 width=ex-sx+1;    //得到填充的宽度
 429   1        u16 height=ey-sy+1;   //高度
 430   1        Lcd_SetRegion(sx,sy,ex,ey);//设置显示窗口
 431   1        for(i=0;i<height;i++)
 432   1        {
 433   2          for(j=0;j<width;j++)
 434   2          LCD_WriteData_16Bit(color); //写入数据   
 435   2        }
 436   1      }
 437          
 438          /*******************************************************************
 439           * @name       :void LCD_DrawLine(u16 x1, u16 y1, u16 x2, u16 y2)
 440           * @date       :2018-08-09 
 441           * @function   :Draw a line between two points
 442           * @parameters :x1:the bebinning x coordinate of the line
 443                          y1:the bebinning y coordinate of the line
 444                          x2:the ending x coordinate of the line
 445                          y2:the ending y coordinate of the line
 446           * @retvalue   :None
 447          ********************************************************************/
 448          void LCD_DrawLine(u16 x1, u16 y1, u16 x2, u16 y2,u16 color)
 449          {
 450   1        u16 t; 
 451   1        int xerr=0,yerr=0,delta_x,delta_y,distance; 
 452   1        int incx,incy,uRow,uCol; 
 453   1      
 454   1        delta_x=x2-x1; //计算坐标增量 
 455   1        delta_y=y2-y1; 
 456   1        uRow=x1; 
 457   1        uCol=y1; 
 458   1        if(delta_x>0)incx=1; //设置单步方向 
 459   1        else if(delta_x==0)incx=0;//垂直线 
 460   1        else {incx=-1;delta_x=-delta_x;} 
 461   1        if(delta_y>0)incy=1; 
 462   1        else if(delta_y==0)incy=0;//水平线 
 463   1        else{incy=-1;delta_y=-delta_y;} 
 464   1        if( delta_x>delta_y)distance=delta_x; //选取基本增量坐标轴 
 465   1        else distance=delta_y; 
 466   1        for(t=0;t<=distance+1;t++ )//画线输出 
 467   1        {  
 468   2          PutPixel(uRow,uCol,color);//画点 
 469   2          xerr+=delta_x ; 
 470   2          yerr+=delta_y ; 
 471   2          if(xerr>distance) 
 472   2          { 
 473   3            xerr-=distance; 
 474   3            uRow+=incx; 
 475   3          } 
 476   2          if(yerr>distance) 
 477   2          { 
 478   3            yerr-=distance; 
 479   3            uCol+=incy; 
 480   3          } 
 481   2        }  
 482   1      } 
 483          
 484          /*****************************************************************************
 485           * @name       :void LCD_DrawRectangle(u16 x1, u16 y1, u16 x2, u16 y2)
 486           * @date       :2018-08-09 
 487           * @function   :Draw a rectangle
 488           * @parameters :x1:the bebinning x coordinate of the rectangle
C51 COMPILER V9.59.0.0   LCD                                                               03/30/2024 01:43:47 PAGE 9   

 489                          y1:the bebinning y coordinate of the rectangle
 490                          x2:the ending x coordinate of the rectangle
 491                          y2:the ending y coordinate of the rectangle
 492           * @retvalue   :None
 493          ******************************************************************************/
 494          void LCD_DrawRectangle(u16 x1, u16 y1, u16 x2, u16 y2,u16 color)
 495          {
 496   1        LCD_DrawLine(x1,y1,x2,y1,color);
 497   1        LCD_DrawLine(x1,y1,x1,y2,color);
 498   1        LCD_DrawLine(x1,y2,x2,y2,color);
 499   1        LCD_DrawLine(x2,y1,x2,y2,color);
 500   1      }  
 501          
 502          void UpdateLCDLEDSelected(u8 chN, u8 Selected)
 503          {
 504   1        u8 Rw=18,Rh=100;
 505   1        u8 Rx,Ry=5,RWh=110;
 506   1        u8 Dxw=LCD_W /SaveLedData0.LedALLChanels;
 507   1        if (chN==0) return;
 508   1      
 509   1        Rx =((Dxw-20)>>1)+Dxw*(chN-1)+1;
 510   1        if (Selected) LCD_DrawRectangle(Rx-7,RWh-1,Rx+27,RWh+16,BLACK);
 511   1        else LCD_DrawRectangle(Rx-7,RWh-1,Rx+27,RWh+16,BACKGROUNDCOLOR);
 512   1      }
 513          
 514          void UpdateLCDLEDCloum(u8 chN, u8 Power, u8 onoff)//选择通道
 515          {
 516   1        u8 Rw=18,Rh=100;
 517   1        u8 Rx,Ry=5;
 518   1        u8 Dxw=LCD_W /SaveLedData0.LedALLChanels;
 519   1        u16 color;
 520   1        if (chN==0) return;
 521   1        
 522   1         if (chN==1) color=PURPLE;
 523   1         else if (chN==2) color=BLUE;
 524   1         else if (chN==3) color=GREEN;
 525   1         else color=RED;
 526   1         
 527   1        Rx =((Dxw-20)>>1)+Dxw*(chN-1)+1;
 528   1        //填框
 529   1        LCD_Fill(Rx,Ry,Rx+Rw,Ry+Rh-Power,BACKGROUNDCOLOR);
 530   1        if (onoff) 
 531   1          LCD_Fill(Rx,Ry+Rh-Power,Rx+Rw,Rh+Ry,color);
 532   1        else
 533   1          LCD_Fill(Rx,Ry+Rh-Power,Rx+Rw,Rh+Ry,GRAY);
 534   1      }
 535          
 536          
 537          void UpdateLcdPowerDisplay(u8 chN, u8 Power,u8 onoff)
 538          {
 539   1         u8 Rw=18,Rh=100;
 540   1         u8 Rx,Ry=5,RWh=110;
 541   1         u8 NumberStr[4];
 542   1         u8 Dxw=LCD_W /SaveLedData0.LedALLChanels;
 543   1         if (chN==0) return;
 544   1        Rx =((Dxw-20)>>1)+Dxw*(chN-1)+1;
 545   1        //填框
 546   1        UpdateLCDLEDCloum( chN,  Power,onoff);
 547   1        
 548   1      
 549   1      //清除数字显示
 550   1        LCD_Fill(Rx-6,RWh,Rx+26,RWh+15,BACKGROUNDCOLOR);
C51 COMPILER V9.59.0.0   LCD                                                               03/30/2024 01:43:47 PAGE 10  

 551   1      //  if (Selected) LCD_DrawRectangle(Rx-9,RWh-1,Rx+38,RWh+18,BLACK);
 552   1        
 553   1        if (Power==100)
 554   1          {
 555   2          Rx-=6;
 556   2          NumberStr[0]='1';
 557   2          NumberStr[1]='0';
 558   2          NumberStr[2]='0';
 559   2          NumberStr[3]='%';
 560   2          Display_ASCII8X16(Rx,RWh,NumberStr,4,BLACK);
 561   2          }
 562   1        else if (Power>=10) 
 563   1          {
 564   2          NumberStr[0]='0'+Power/10;  
 565   2          NumberStr[1]='0'+Power%10;
 566   2          NumberStr[2]='%';
 567   2          Display_ASCII8X16(Rx,RWh,NumberStr,3,BLACK);
 568   2          }
 569   1        else 
 570   1          {
 571   2          NumberStr[0]='0'+Power%10;
 572   2          NumberStr[1]='%';
 573   2          Display_ASCII8X16(Rx,RWh,NumberStr,2,BLACK);
 574   2          }
 575   1      }
 576          
 577          void LCD_DrawWorkScreen(void)
 578          {
 579   1       u8 Rw=20,Rh=102;
 580   1       u8 Rx,Ry=4;
 581   1       u8 Dxw=LCD_W /SaveLedData0.LedALLChanels; 
 582   1       u8 onoff=0;
 583   1        LCD_Clear(BACKGROUNDCOLOR);
 584   1        Rx =(Dxw-Rw)>>1;
 585   1        LCD_DrawRectangle(Rx,Ry,Rx+Rw,Rh+Ry,PURPLE);
 586   1        if (SaveLedData0.SelectedLedChanel==1 && SaveLedData0.LedOnOff==1) onoff=1;else onoff=0;
 587   1        UpdateLcdPowerDisplay(1, SaveLedData0.LedPower[1],onoff);
 588   1        if (SaveLedData0.LedALLChanels>=2)
 589   1          {
 590   2          Rx +=Dxw;
 591   2          LCD_DrawRectangle(Rx,4,Rx+Rw,Rh+4,BLUE);
 592   2          if (SaveLedData0.SelectedLedChanel==2 && SaveLedData0.LedOnOff==1) onoff=1;else onoff=0;
 593   2          UpdateLcdPowerDisplay(2, SaveLedData0.LedPower[2],onoff);
 594   2          if (SaveLedData0.LedALLChanels>=3)
 595   2            {
 596   3            Rx +=Dxw;
 597   3            LCD_DrawRectangle(Rx,4,Rx+Rw,Rh+4,GREEN);
 598   3            if (SaveLedData0.SelectedLedChanel==3 && SaveLedData0.LedOnOff==1) onoff=1;else onoff=0;
 599   3            UpdateLcdPowerDisplay(3, SaveLedData0.LedPower[3],onoff);
 600   3            
 601   3            
 602   3            if (SaveLedData0.LedALLChanels>=4)
 603   3              {
 604   4              Rx +=Dxw;
 605   4              LCD_DrawRectangle(Rx,4,Rx+Rw,Rh+4,RED);
 606   4              if (SaveLedData0.SelectedLedChanel==4 && SaveLedData0.LedOnOff==1) onoff=1;else onoff=0;
 607   4              UpdateLcdPowerDisplay(4, SaveLedData0.LedPower[4],onoff);
 608   4              }
 609   3            }
 610   2          }
 611   1      
 612   1        if (SaveLedData0.SelectedLedChanel==1)
C51 COMPILER V9.59.0.0   LCD                                                               03/30/2024 01:43:47 PAGE 11  

 613   1        {
 614   2        UpdateLCDLEDSelected(1,1);
 615   2        }
 616   1        else if (SaveLedData0.SelectedLedChanel==2)
 617   1        {
 618   2        UpdateLCDLEDSelected(2,1);
 619   2        }
 620   1        else if (SaveLedData0.SelectedLedChanel==3)
 621   1        {
 622   2        UpdateLCDLEDSelected(3,1);
 623   2        }
 624   1        else if (SaveLedData0.SelectedLedChanel==4)
 625   1        {
 626   2        UpdateLCDLEDSelected(4,1);
 627   2        }
 628   1        LCD_DISPiD=1;
 629   1      }
 630          
 631          void DisplayDisconnect(void)
 632          {
 633   1        LCD_Clear(BACKGROUNDCOLOR);
 634   1        LCD_DrawRectangle(5,5,123,123,BLACK);
 635   1        Display_ASCII8X16(33,16,"Warnning",8,RED);
 636   1        Display_ASCII8X16(13,48,"Driver board",12,RED);
 637   1        Display_ASCII8X16(13,64,"disconnect!",11,RED);
 638   1        LCD_DISPiD=0xff;
 639   1      }
 640          
 641          void DispSettingRectangle(void)
 642          {
 643   1        LCD_DrawRectangle(95,7+(LCD_DISPiD-3)*20,126,25+(LCD_DISPiD-3)*20,BACKGROUNDCOLOR);
 644   1        LCD_DrawRectangle(95,7+(LCD_DISPiD-2)*20,126,25+(LCD_DISPiD-2)*20,BLACK);
 645   1      }
 646          
 647          void DispSettingRectangle2(void)
 648          {
 649   1        u8 tempv=LCD_DISPiD-6;
 650   1        LCD_DrawRectangle(95,7+(tempv-3)*20,126,25+(tempv-3)*20,BACKGROUNDCOLOR);
 651   1        LCD_DrawRectangle(95,7+(tempv-2)*20,126,25+(tempv-2)*20,BLACK);
 652   1      }
 653          
 654          
 655          void DispSettingNumber(u8 location,u8 numberv)
 656          {
 657   1        u8 Num[3];
 658   1        u8 y;
 659   1        y=8+20*(location-2);
 660   1        //清除数字显示
 661   1        LCD_Fill(95,y,126,y+16,BACKGROUNDCOLOR);
 662   1        Num[0]='0'+numberv/100;
 663   1        Num[1]='0'+numberv%100/10;
 664   1        Num[2]='0'+numberv%10;
 665   1        Display_ASCII8X16(96,y,Num,3,BLACK);
 666   1      }
 667          
 668          
 669          void DisplaySetting(void)
 670          {
 671   1      
 672   1        LCD_DISPiD=2;
 673   1        LCD_Clear(BACKGROUNDCOLOR);
 674   1        Display_ASCII8X16(8,8,"LED Number:",11,BLACK);
C51 COMPILER V9.59.0.0   LCD                                                               03/30/2024 01:43:47 PAGE 12  

 675   1        DispSettingNumber(2,SaveLedData0.LedALLChanels);
 676   1        LCD_DrawRectangle(95,7,126,25,BLACK);
 677   1      
 678   1        Display_ASCII8X16(8,28,"MotorStep:",10,BLACK);
 679   1        DispSettingNumber(3,SaveLedData0.MotorStepPluses);
 680   1      
 681   1        Display_ASCII8X16(8,48,"LED1 Lot:",9,BLACK);
 682   1        DispSettingNumber(4,SaveLedData0.LEDMotorLocation[1]);
 683   1        
 684   1        Display_ASCII8X16(8,68,"LED2 Lot:",9,BLACK);
 685   1        DispSettingNumber(5,SaveLedData0.LEDMotorLocation[2]);
 686   1      
 687   1      
 688   1        Display_ASCII8X16(8,88,"LED3 Lot:",9,BLACK);
 689   1        DispSettingNumber(6,SaveLedData0.LEDMotorLocation[3]);
 690   1        
 691   1        Display_ASCII8X16(8,108,"LED4 Lot:",9,BLACK);
 692   1        DispSettingNumber(7,SaveLedData0.LEDMotorLocation[4]);
 693   1      }
 694          
 695          void DisplaySetting1(void)
 696          {
 697   1        LCD_DISPiD=8;
 698   1        LCD_Clear(BACKGROUNDCOLOR);
 699   1        Display_ASCII8X16(8,8,"Driver Fan:",11,BLACK);
 700   1        DispSettingNumber(2,SaveLedData0.DriverFanOnOff);
 701   1        LCD_DrawRectangle(95,7,126,25,BLACK);
 702   1        
 703   1        Display_ASCII8X16(8,28,"Purplelamp:",11,BLACK);
 704   1        DispSettingNumber(3,SaveLedData0.PurpleLamp);
 705   1      }
 706          
 707          void DisplaySetting2(void)
 708          {
 709   1        LCD_DISPiD=9;   
 710   1        LCD_DrawRectangle(95,7+(3-3)*20,126,25+(3-3)*20,BACKGROUNDCOLOR);
 711   1        LCD_DrawRectangle(95,7+(3-2)*20,126,25+(3-2)*20,BLACK); 
 712   1        
 713   1      }
 714          
 715          
 716          #if 1
 717          
 718          
 719          uchar code Zk_ASCII8X16[]=
 720           {
 721            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 722            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 723            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 724            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 725            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 726            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 727            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 728            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 729            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 730            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 731            0x00,0x18,0x08,0xc8,0x08,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 732            0x00,0x00,0x00,0x7f,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0xe0,
 733            0x60,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 734            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x18,0x10,
 735            0x10,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 736            0x00,0x00,0x00,0x00,0x00,0x08,0x08,0x08,0x0c,0x0c,0x0c,0x00,0x00,
C51 COMPILER V9.59.0.0   LCD                                                               03/30/2024 01:43:47 PAGE 13  

 737            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 738            0x00,0x00,0x00,0x00,0x00,0x6c,0x38,0x10,0x00,0x7c,0xc6,0x70,0x1c,
 739            0xc6,0x7c,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x38,0x6c,0x00,0x78,
 740            0x0c,0x7c,0xcc,0xcc,0x76,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 741            0x00,0x00,0x7c,0xc6,0x70,0xc0,0xc6,0x7c,0x00,0x00,0x00,0x00,0x00,
 742            0x00,0x00,0x00,0x00,0x00,0x6c,0x96,0x7c,0xd0,0xd6,0x6c,0x00,0x00,
 743            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7c,0xc6,0x06,0x06,0xc6,
 744            0x7c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x6c,0xc6,0xc6,0xfe,
 745            0xc6,0xc6,0x6c,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 746            0x10,0x38,0x28,0x6c,0x44,0xc6,0xc6,0x00,0x00,0x00,0x00,0x00,0x00,
 747            0x00,0x00,0x00,0x00,0x7c,0xc6,0x06,0xfe,0xc6,0x7c,0x00,0x00,0x00,
 748            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xdc,0x66,0x66,0x66,0xf6,0x06,
 749            0x06,0x66,0x3c,0x00,0x00,0x00,0x00,0x6c,0x38,0xf8,0x0c,0x7e,0xc6,
 750            0xc6,0xc6,0x7c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0e,0x1b,0x18,
 751            0x18,0x18,0x18,0x18,0x18,0x18,0xd8,0x70,0x00,0x00,0x00,0x00,0x00,
 752            0x00,0x00,0xfe,0x86,0x0c,0x18,0x0c,0x06,0x06,0xc6,0x7c,0x00,0x00,
 753            0x00,0x00,0x76,0xdc,0x00,0x00,0x78,0x0c,0x7c,0xcc,0xcc,0x76,0x00,
 754            0x00,0x00,0x00,0x00,0x00,0x76,0xdc,0x00,0x00,0x7c,0xc6,0x06,0x06,
 755            0xc6,0x7c,0x00,0x00,0x00,0x00,0x00,0x00,0x76,0xdc,0x00,0x00,0xdc,
 756            0x66,0x66,0x66,0x66,0x66,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 757            0x00,0x00,0x76,0x99,0x9f,0x98,0x99,0x6f,0x00,0x00,0x00,0x00,0x00,
 758            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0c,0x06,0x06,
 759            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3c,
 760            0x66,0x66,0x3c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 761            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x3c,
 762            0x3c,0x3c,0x18,0x18,0x00,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00,
 763            0xc6,0xc6,0xc6,0x44,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 764            0x00,0x00,0x00,0x00,0x6c,0x6c,0xfe,0x6c,0x6c,0x6c,0xfe,0x6c,0x6c,
 765            0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x7c,0xc6,0xc2,0xc0,0x7c,0x06,
 766            0x86,0xc6,0x7c,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc3,
 767            0xc6,0x0c,0x18,0x30,0x63,0xc3,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 768            0x38,0x6c,0x6c,0x38,0x76,0xdc,0xcc,0xcc,0x76,0x00,0x00,0x00,0x00,
 769            0x00,0x00,0x30,0x30,0x30,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 770            0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x30,0x60,0x60,0x60,0x60,0x60,
 771            0x30,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x0c,0x06,0x06,
 772            0x06,0x06,0x06,0x0c,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 773            0x00,0x6c,0x38,0xfe,0x38,0x6c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 774            0x00,0x00,0x00,0x18,0x18,0x18,0x7e,0x18,0x18,0x18,0x00,0x00,0x00,
 775            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,
 776            0x18,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xfe,
 777            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 778            0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00,
 779            0x00,0x02,0x06,0x0c,0x18,0x30,0x60,0xc0,0x80,0x00,0x00,0x00,0x00,
 780            0x00,0x00,0x00,0x00,0x7c,0xc6,0xce,0xde,0xf6,0xe6,0xc6,0xc6,0x7c,
 781            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x38,0x78,0x18,0x18,0x18,
 782            0x18,0x18,0x7e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7c,0xc6,0x06,
 783            0x0c,0x18,0x30,0x60,0xc6,0xfe,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 784            0x7c,0xc6,0x06,0x06,0x3c,0x06,0x06,0xc6,0x7c,0x00,0x00,0x00,0x00,
 785            0x00,0x00,0x00,0x0c,0x1c,0x3c,0x6c,0xcc,0xfe,0x0c,0x0c,0x1e,0x00,
 786            0x00,0x00,0x00,0x00,0x00,0x00,0xfe,0xc0,0xc0,0xc0,0xfc,0x06,0x06,
 787            0xc6,0x7c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x60,0xc0,0xc0,
 788            0xfc,0xc6,0xc6,0xc6,0x7c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xfe,
 789            0xc6,0x06,0x0c,0x18,0x30,0x30,0x30,0x30,0x00,0x00,0x00,0x00,0x00,
 790            0x00,0x00,0x7c,0xc6,0xc6,0xc6,0x7c,0xc6,0xc6,0xc6,0x7c,0x00,0x00,
 791            0x00,0x00,0x00,0x00,0x00,0x7c,0xc6,0xc6,0xc6,0x7e,0x06,0x06,0x0c,
 792            0x78,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00,
 793            0x00,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,
 794            0x18,0x00,0x00,0x00,0x18,0x18,0x30,0x00,0x00,0x00,0x00,0x00,0x00,
 795            0x00,0x06,0x0c,0x18,0x30,0x60,0x30,0x18,0x0c,0x06,0x00,0x00,0x00,
 796            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7e,0x00,0x00,0x7e,0x00,0x00,
 797            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x30,0x18,0x0c,0x06,0x0c,
 798            0x18,0x30,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7c,0xc6,0xc6,
C51 COMPILER V9.59.0.0   LCD                                                               03/30/2024 01:43:47 PAGE 14  

 799            0x0c,0x18,0x18,0x00,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 800            0x7c,0xc6,0xc6,0xde,0xde,0xde,0xdc,0xc0,0x7c,0x00,0x00,0x00,0x00,
 801            0x00,0x00,0x00,0x10,0x38,0x6c,0xc6,0xc6,0xfe,0xc6,0xc6,0xc6,0x00,
 802            0x00,0x00,0x00,0x00,0x00,0x00,0xfc,0x66,0x66,0x66,0x7c,0x66,0x66,
 803            0x66,0xfc,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3c,0x66,0xc2,0xc0,
 804            0xc0,0xc0,0xc2,0x66,0x3c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xf8,
 805            0x6c,0x66,0x66,0x66,0x66,0x66,0x6c,0xf8,0x00,0x00,0x00,0x00,0x00,
 806            0x00,0x00,0xfe,0x66,0x62,0x68,0x78,0x68,0x62,0x66,0xfe,0x00,0x00,
 807            0x00,0x00,0x00,0x00,0x00,0xfe,0x66,0x62,0x68,0x78,0x68,0x60,0x60,
 808            0xf0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3c,0x66,0xc2,0xc0,0xc0,
 809            0xde,0xc6,0x66,0x3a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc6,0xc6,
 810            0xc6,0xc6,0xfe,0xc6,0xc6,0xc6,0xc6,0x00,0x00,0x00,0x00,0x00,0x00,
 811            0x00,0x3c,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x3c,0x00,0x00,0x00,
 812            0x00,0x00,0x00,0x00,0x1e,0x0c,0x0c,0x0c,0x0c,0x0c,0xcc,0xcc,0x78,
 813            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xe6,0x66,0x6c,0x6c,0x78,0x6c,
 814            0x6c,0x66,0xe6,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xf0,0x60,0x60,
 815            0x60,0x60,0x60,0x62,0x66,0xfe,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 816            0xc6,0xee,0xfe,0xd6,0xc6,0xc6,0xc6,0xc6,0xc6,0x00,0x00,0x00,0x00,
 817            0x00,0x00,0x00,0xc6,0xe6,0xf6,0xfe,0xde,0xce,0xc6,0xc6,0xc6,0x00,
 818            0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x6c,0xc6,0xc6,0xc6,0xc6,0xc6,
 819            0x6c,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xfc,0x66,0x66,0x66,
 820            0x7c,0x60,0x60,0x60,0xf0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7c,
 821            0xc6,0xc6,0xc6,0xd6,0xde,0x7c,0x0c,0x0e,0x00,0x00,0x00,0x00,0x00,
 822            0x00,0x00,0xfc,0x66,0x66,0x66,0x7c,0x6c,0x66,0x66,0xe6,0x00,0x00,
 823            0x00,0x00,0x00,0x00,0x00,0x7c,0xc6,0xc6,0x60,0x38,0x0c,0xc6,0xc6,
 824            0x7c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7e,0x5a,0x18,0x18,0x18,
 825            0x18,0x18,0x18,0x3c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc6,0xc6,
 826            0xc6,0xc6,0xc6,0xc6,0xc6,0xc6,0x7c,0x00,0x00,0x00,0x00,0x00,0x00,
 827            0x00,0xc6,0xc6,0xc6,0xc6,0xc6,0xc6,0x6c,0x38,0x10,0x00,0x00,0x00,
 828            0x00,0x00,0x00,0x00,0xc6,0xc6,0xc6,0xc6,0xc6,0xd6,0xfe,0xee,0xc6,
 829            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc6,0xc6,0xc6,0x6c,0x38,0x6c,
 830            0xc6,0xc6,0xc6,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc6,0xc6,0xc6,
 831            0x6c,0x38,0x38,0x38,0x38,0x7c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 832            0xfe,0xc6,0x8c,0x18,0x30,0x60,0xc2,0xc6,0xfe,0x00,0x00,0x00,0x00,
 833            0x00,0x00,0x00,0x3c,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x3c,0x00,
 834            0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xc0,0xe0,0x70,0x38,0x1c,0x0e,
 835            0x06,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3c,0x0c,0x0c,0x0c,
 836            0x0c,0x0c,0x0c,0x0c,0x3c,0x00,0x00,0x00,0x00,0x00,0x10,0x38,0x6c,
 837            0xc6,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 838            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xfe,
 839            0x00,0x00,0x00,0x00,0x30,0x30,0x18,0x00,0x00,0x00,0x00,0x00,0x00,
 840            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x0c,
 841            0x7c,0xcc,0xcc,0x76,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xe0,0x60,
 842            0x60,0x78,0x6c,0x66,0x66,0x66,0xdc,0x00,0x00,0x00,0x00,0x00,0x00,
 843            0x00,0x00,0x00,0x00,0x7c,0xc6,0xc0,0xc0,0xc6,0x7c,0x00,0x00,0x00,
 844            0x00,0x00,0x00,0x00,0x1c,0x0c,0x0c,0x3c,0x6c,0xcc,0xcc,0xcc,0x76,
 845            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7c,0xc6,0xfe,
 846            0xc0,0xc6,0x7c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1c,0x36,0x32,
 847            0x30,0x7c,0x30,0x30,0x30,0x78,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 848            0x00,0x00,0x00,0x76,0xcc,0xcc,0xcc,0x7c,0x0c,0xcc,0x78,0x00,0x00,
 849            0x00,0x00,0x00,0xe0,0x60,0x60,0x6c,0x76,0x66,0x66,0x66,0xe6,0x00,
 850            0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x38,0x18,0x18,0x18,
 851            0x18,0x3c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x06,0x06,0x00,0x0e,
 852            0x06,0x06,0x06,0x06,0x66,0x66,0x3c,0x00,0x00,0x00,0x00,0x00,0xe0,
 853            0x60,0x60,0x66,0x6c,0x78,0x6c,0x66,0xe6,0x00,0x00,0x00,0x00,0x00,
 854            0x00,0x00,0x38,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x3c,0x00,0x00,
 855            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x44,0xfe,0xd6,0xd6,0xd6,
 856            0xd6,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xdc,0x66,
 857            0x66,0x66,0x66,0x66,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 858            0x00,0x7c,0xc6,0xc6,0xc6,0xc6,0x7c,0x00,0x00,0x00,0x00,0x00,0x00,
 859            0x00,0x00,0x00,0x00,0xdc,0x66,0x66,0x66,0x7c,0x60,0x60,0xf0,0x00,
 860            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x76,0xcc,0xcc,0xcc,0x7c,0x0c,
C51 COMPILER V9.59.0.0   LCD                                                               03/30/2024 01:43:47 PAGE 15  

 861            0x0c,0x1e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xdc,0x76,0x66,
 862            0x60,0x60,0xf0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 863            0x7c,0xc6,0x70,0x1c,0xc6,0x7c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 864            0x10,0x30,0x30,0xfc,0x30,0x30,0x30,0x36,0x1c,0x00,0x00,0x00,0x00,
 865            0x00,0x00,0x00,0x00,0x00,0x00,0xcc,0xcc,0xcc,0xcc,0xcc,0x76,0x00,
 866            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc6,0xc6,0xc6,0x6c,
 867            0x38,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc6,
 868            0xc6,0xc6,0xd6,0xfe,0x6c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 869            0x00,0x00,0xc6,0x6c,0x38,0x38,0x6c,0xc6,0x00,0x00,0x00,0x00,0x00,
 870            0x00,0x00,0x00,0x00,0x00,0xc6,0xc6,0xc6,0xc6,0x7e,0x06,0x0c,0x78,
 871            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xfe,0xcc,0x18,0x30,0x66,
 872            0xfe,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0e,0x18,0x18,0x18,0x70,
 873            0x18,0x18,0x18,0x0e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18,
 874            0x18,0x18,0x00,0x18,0x18,0x18,0x18,0x00,0x00,0x00,0x00,0x00,0x00,
 875            0x00,0x70,0x18,0x18,0x18,0x0e,0x18,0x18,0x18,0x70,0x00,0x00,0x00,
 876            0x00,0x00,0x00,0x00,0x76,0xdc,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 877            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 878            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 879            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 880            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
 881            };
 882          
 883          
 884          
 885          #endif
 886          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   6688    ----
   CONSTANT SIZE    =   2201    ----
   XDATA SIZE       =    469    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
